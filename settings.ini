[global]
    N = 500 
    dt = 1e-12 # usar o menor valor entre (Pe/Cc) /10 e (St/Cc) / 10
    t_fim = 10*10e-7
    nimpre = 100
    dimX = 2000
    dimY = 250
    Th = 2.5
    Tc = 1
    Pe0 = 4.684641850799416e-11
    St0 = 6.798825469664033e-12
    Kn0 = 150
    slip_correction = .true.
    rhof = 1 # sensitividade da diferença de densidade com temperature
    GField = 0 -1
    wall = 'eeee'
    x = -1 -1 # se negativo, a posição será aleatória
    v = 0 0 # velocidade inicial
    
# para estimar Cc
# import numpy as np
# import matplotlib.pyplot as plt 
# def Cc(Kn0, T_loc): 
#      return (1 + (Kn0 * T_loc)*(1.155 + 0.471 * np.exp(-0.596 /  (Kn0 * T_loc) )))                                                                                                
# C = np.zeros((10,10))                                                                         
# Kn0 = np.linspace(150,300,10)                                                                 
# T_loc = np.linspace(1,3,10)                                                                   
# for i in range(len(Kn0)):  
#     for j in range(len(T_loc)):  
#         C[i,j] = Cc(Kn0[i],T_loc[j]) 
#                                                                                                
# fig, ax = plt.subplots()                                                                      
# ax.contourf(Kn0,T_loc,C)                                                                      
# cntr1 = ax.contourf(Kn0, T_loc, C)                                                           
# fig.colorbar(cntr1,ax=ax)                                                                    